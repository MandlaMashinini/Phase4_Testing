
\documentclass[12pt]{article}
\usepackage{graphicx}
\usepackage{hyperref}

\begin{document}
	

	\begin{figure}
		\includegraphics[width=\linewidth]{logo.jpg}	
	\end{figure}

	\title 	{
				COS 301\\
				Mini Project
				Testing
		   	}
	\author {
				Nardus van der Vyver u15012698\\
				Minal Pramlall u13288157\\
				Peter Rayner u14001757\\
				Mandla Mhlongo u29630135\
			}
	\maketitle
	\begin{center}
			\url{https://github.com/MandlaMashinini/Phase4_Testing}	
	\end{center}
	\newpage
	\tableofcontents
	
	
	\newpage
	
	
	
	
	\section{Service Contract Of Each Of The Use Case Tested}
	\begin{enumerate}
	
	
	 \item Get all building names:\\
    \textbf{Mark: }
    0.\\
    \textbf{Comment:}
   This functionality was not implemented and we were unable to retrieve the data as a batch.\\ \\
    
	
    \item Get building by coordinates:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    The function correctly returns all the information on a building based on the coordinates provided.\\ \\
    
    \item Get building by name:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    The function correctly returns all the information on a building based on the name provided.\\ \\
    
    
	 \item Get all room names:\\
    \textbf{Mark: }
    0.\\
    \textbf{Comment:}
   This functionality was not implemented and we were unable to retrieve the room names as a batch.\\ \\
   
    \item Get location by room number:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    The function correctly returns the location of a room by providing the building name and room.\\ \\
    
    \item Get routes:\\
    \textbf{Mark: }
    8.\\
    \textbf{Comment:}\\
    The function mostly provides the correct route between a start and end point for a user.\\ \\
    
    \item Insert building:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    The function correctly inserts a building(location) and all its details into the database.\\ \\
    
    \item Insert building room:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    Correctly inserts a new room into an existing building of the database.\\ \\
    
    \item Update building coordinates:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    The function correctly updates the coordinates of an existing building in the database.\\ \\
    
    \item Update building name:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    Correctly updates an existing locations name(building name).\\ \\
    
    \item Update building room:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    Correctly updates an existing room name inside a given building.\\ \\
    
    \item Update building room coordinates:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    This function correctly updates the coordinates of an existing room inside a building.\\ \\
    
     \item Update batch of building through external file:\\
    \textbf{Mark: }
    3.\\
    \textbf{Comment:}
    This functionality only works when updating the original data file and doesn't take into account the user using a separate input file .\\ \\
    
    \item Remove building:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    The function removes a building and all its dependencies correctly from the database.\\ \\
    
    \item Remove building room:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    This function removes a room correctly from building it is contained in.\\ \\
\end{enumerate}
    \newpage
	\section{Non-Functional Requirements Tested}
	\begin{enumerate}
    \item Maintainability:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    Classes are separated well and allows easier access and retrieval to the object data.\\ \\
    
    \item Performance:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    Recognized that Postgres is the best performing database for this system, thus has better response times.\\ \\
    
    \item Scalability:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    Return methods allow for batch processing, returning a collection of objects at a time, as opposed to one a time.\\ \\
    
    \item Interoperability:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}\\
    This module runs with Java, similar to the other teams, and thus allows interchangeability with the other modules or the interfaces it can communicate with.\\ \\
    
    \item Usability:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    Enough class accessors and mutators have been provided to allow full use of the data objects.\\ \\
    
    \item Data Integrity and Security:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    Communication between classes leave little room for problems with data communication, GIS also has little to no interaction with any sensitive information so security measures need not be so strenuous.\\ \\
    
    \item Transparency:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    GIS module returns the locations and as much information relating to it, which makes the need for it to be as transparent as possible, which is delivered. Class objects provide access to all the fields and the methods themselves are named to clearly describe their function.\\ \\
    
    \item Documentation:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    All methods are well documented.\\ \\
    
    \item Reliability:\\
    \textbf{Mark: }
    9.\\
    \textbf{Comment:}
    Methods of this subsystem consistently return correct data, minus getting routes, which is - nevertheless - still mostly correct.\\ \\
    
    \item Availability:\\
    \textbf{Mark: }
    10.\\
    \textbf{Comment:}
    Methods are easily accessible and maintain consistency with return values.\\ \\
    
    
    
    
    
    \section{Improving On The Existing Test Output}
	
	\subsubsection{Verification}
	We asked the question whether or not the behaviour of their code/component is what we expected. In most cases this was a yes as it did meet many of the expectations. It did however have some things that we expected, such as batch collection, that were not present.
	
	\subsubsection{Validation}  
	We also asked if the right "thing" is being built. This was an issue as they missed out some key points of what was expected from the project such as getting batch objects. However they were on the right track but were missing some critical parts that were requested.
	
		
	\section{Coverage And Efficiency}
	
  \textbf{Mark: }
    3.\\
     \textbf{Comment:}
	They has very little coverage of test cases overall. Not all functions were tested in the given Apptest.java file. There was	no testing of multi-threaded cases and would cause code to break under these circumstances and return wrong values if an update and a get function were called at the same time. This would happen under real world circumstances where multiple users would request data simultaneously. Their test cases are inefficient as most functions were not tested at all. Their only test case in their test file was if the class compiled correctly. Also there was functionality that was missing such as the ability to gain arrays of data such as all the builds or classrooms.
	
\end{enumerate}
\end{document}	
